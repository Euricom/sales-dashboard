import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { EmployeeCard } from "~/components/employee";

import { api } from "~/utils/api";

export default function Home() {
  const employeesData = api.sharePoint.getEmployeesData.useQuery();

  if (employeesData.error) {
    console.error(employeesData.error);
    return <div>Error: {employeesData.error.message}</div>;
  }
  if (employeesData.isLoading) {
    return <div>Loading...</div>;
  }

  return (
    <>
      <Head>
        <title>Sales Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-between p-4 bg-euricom-secondary">
        <div className="flex flex-row gap-4">
          {employeesData.data?.value.map((employee) => {
            return (
              <EmployeeCard
                title={employee.fields.Title}
                jobTitle={employee.fields.Job_x0020_title}
                level={employee.fields.Level}
                status={employee.fields.Status}
                subStatus={employee.fields.Contract_x0020_Substatus}
                key={employee.fields.Title} // TODO: This is not a good key --> TEMPKEY
              />
            );
          })}
        </div>
        <AuthShowcase />
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-euricom-primary px-10 py-3 font-semibold text-white no-underline transition hover:bg-euricom-primary/50"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
