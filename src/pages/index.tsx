import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { api } from "~/utils/api";
import { useRouter } from "next/navigation";

export default function Home() {
  const { data } = useSession();
  const router = useRouter();
  const { data: redirection } = api.teamleader.getRedirectionURL.useQuery(
    undefined,
    {},
  );
  const loginWithTL = () => {
    if (!redirection) return;
    router.push(redirection);
  };
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main style={{ background: "grey" }}>
        <AuthShowcase />
        {data?.user && <button onClick={loginWithTL}>LOGIN TL</button>}
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
// interface GetRedirectionURLShowcaseProps {
//   onURLReceived: (url: string) => void;
// }

// const GetRedirectionURLShowcase = ({
//   onURLReceived,
// }: GetRedirectionURLShowcaseProps) => {
//   const [code, setCode] = useState<string | void | null>(null);
//   // const fnCall = useAccessToken(String(code));
//   const { data: url } = api.teamleader.getRedirectionURL.useQuery(
//     undefined, // no input
//   );

//   useEffect(() => {
//     if (url) {
//       // Get the access token from teamleader with the code from the URL
//       setCode(onURLReceived(url));
//       console.log(code, "code");

//       // fnCall();
//     }
//   }, [url, onURLReceived, code]);

//   // return null;
//   // return <div>{code !== null && GetAccessToken(String(code))}</div>;
// };

// const useAccessToken = (code: string) => {
//   return () => {
//     const { data: accessToken } = api.teamleader.getAccessToken.useQuery(code);
//     console.log(accessToken, "front-end access token");
//     return accessToken
//   }
//   // const { data: accessToken } = api.teamleader.getAccessToken.useQuery(code);
//   // console.log(accessToken, "front-end access token");
//   // return null;
// };
